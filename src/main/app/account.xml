<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq"
	xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

	<flow name="GRB_account">
        <!-- <http:listener config-ref="file_batch_api_httpListenerConfiguration" 
        	path="/prueba" allowedMethods="GET" doc:name="HTTP"/>
	
		<logger  level="INFO" doc:name="Logger" message="//input/#[flow.name.split('_')[0]]/#[flow.name.split('_')[1]]"/> -->
        <!-- <poll doc:name="Poll">
            <schedulers:cron-scheduler expression="0 0 1 * * ?" timeZone="Europe/London"/> -->
            <!-- <watermark variable="lastAccountCSV" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.lastModifiedDate]"/> -->
         
        <!-- 
        <sftp:inbound-endpoint ref="sftpInboundProperties" doc:name="SFTP Account Files">
        	<file:filename-wildcard-filter pattern="*.txt,*.csv" caseSensitive="true"/>
        </sftp:inbound-endpoint>
         -->
        <sftp:inbound-endpoint host="${sftp.host}" port="${sftp.port}" path="${sftp.path.grb.account}"
		 user="${sftp.username}" password="${sftp.password}"
		 pollingFrequency="${sftp.pollingFrequency}" responseTimeout="10000" 
		name="sftpInboundProperties" doc:name="sftpInboundProperties" doc:description="SFTP Inbound Configuration Properties.
Include: 
- Polling Frequency 
- Reconnect Strategy">
            <file:filename-wildcard-filter pattern="*.csv" caseSensitive="false"/>

			<reconnect frequency="${sftp.reconnectFrequency}" count="${sftp.reconnection}" blocking="false" />
	</sftp:inbound-endpoint>
         
        <!-- </poll> -->
        <dw:transform-message doc:name="ListIterator">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
commonVariables:flow.name.split('_')]]></dw:set-payload>
        </dw:transform-message>
        
		<flow-ref name="leh-common-service-log-start-subflow" doc:name="leh-common-service-log-start-subflow"/>
        <flow-ref name="batch_common_variables" doc:name="batch_common_variables"/>
		<choice doc:name="lock policy">
			<when expression="#['poll' == '${trigger.policy}']">
				<expression-component doc:name="lock account batch interface"><![CDATA[app.registry['PollSynchronizer'].lock();]]></expression-component>
				<batch:execute name="account" doc:name="account" />
			</when>
			<otherwise>
                <expression-component doc:name="No Lock Policy"><![CDATA[app.name;]]></expression-component>
			</otherwise>
		</choice>
        <file:outbound-endpoint path="${folder.output}\#[flowVars.market]\#[flowVars.type_object]" outputPattern="${file.name.pattern.account}" responseTimeout="10000" doc:name="Move to Output"/>
        <flow-ref name="leh-common-service-log-complete-subflow" doc:name="leh-common-service-log-complete-subflow"/>
		<exception-strategy ref="global-exception-strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	
	
   <batch:job name="account">

		<batch:process-records>
			<batch:step name="EachRecordFile">
                    <validation:all doc:name="Data Validation">
                        <validation:validations>
                            <validation:is-empty value="#[payload]" message="File is empty" exceptionClass="org.apache.poi.EmptyFileException"/>
                        </validation:validations>
                    </validation:all>
                    <dw:transform-message doc:name="Transform Record">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                    </dw:transform-message>

			</batch:step>
			<batch:step name="RouteRecordToAMQ" accept-expression="#[payload.id!=null]">
                <flow-ref name="queue" doc:name="queue"/>

				<!-- <anypoint-mq:publish config-ref="Anypoint_MQ_Configuration" destination="${amq.destination}" 
					doc:name="RouteToTopic"/> -->
			</batch:step>
            <batch:step name="RecordToAccountSystemAPI">
                <http:request config-ref="http_Request_Configuration" path="account_sys_api" method="POST" doc:name="HTTP"/>
            </batch:step>
			<batch:step name="LogFailureSteps" accept-policy="ONLY_FAILURES"
				accept-expression="#[payload.id!=null]">
				<logger level="ERROR" doc:name="Failure" message="Failure because #[payload]" />
			</batch:step>
		</batch:process-records>
		<batch:on-complete>
			<json:object-to-json-transformer
				doc:name="Transform BatchJobInstance to JSON" />
			<logger message="#INFO: [#[message]]" level="INFO" doc:name="Logger" />
		</batch:on-complete>
	</batch:job>




</mule>
